[{"id":0,"href":"/dev-diaries/pt/docs/gitfichas/","title":"GitFichas","section":"Docs","content":"GitFichas #  Olá você que acabou de chegar por aqui, te desejo boas vindas do fundo do meu coração! Aqui você vai encontrar notas e pensamentos sobre o processo de desenvolvimento do site GitFichas.\nEsse diário não é um diário #  Aviso antes de começar: Embora essa página chame “Diário” ela vai ser atualizada quando der e não necessariamente cada página vai ser amarrada à uma data.\nTambém vale salientar que, diferentemente dos artigos no meu blog, o objetivo desse blog é contar o processo de construção do GitFichas. Você vai aprender lendo isso aqui? Provavelmente sim, porém, o objetivo aqui é expor mais do que ensinar. Expor raciocínios, passos, pensamentos e processo, assim como também e mais importante, expor aprendizados.\nEspero que as informações contidas aqui possam te ajudar de alguma forma. E que essa sequência temporal dos fatos te inspirem a quem sabe construir o seu projeto, de preferência sem cometer os mesmos erros que eu cometi.\nComo eu trabalho no GitFichas #  Eu tenho um tempo limitado para trabalhar no GitFichas, ele é, literalmente, um projeto de final de semana. Então toda novidade e alteração que você vê por aqui ocorre em vários dias.\nEu tento separar as atividades e ajustes para que eles precisem de no máximo um dia e meio de trabalho. Assim eu posso trabalhar no GitFichas no sábado e descansar no domingo, para começar a semana de trabalho na segunda sem estar cansada.\nUm pouco de história #  Como nasceu o GitFichas #  Eu tenho preparado alguns conteúdos de Git que eu ainda não estou pronta para compartilhar, vai ser um material num formato mais longo então eu tenho precisado de mais tempo entre preparar, revisar e publicar. Por causa disso, um incômodo começou a aparecer em mim.\nEsse incômodo pode ser resumido em: “Eu to fazendo esse material para ajudar pessoas, mas ele ainda não está pronto, e a parte que está pronta, está simplesmente sentado no meu computador e não está ajudando ninguém”. Por causa disso eu tentei achar um espaço intermediário onde eu consiga publicar parte do conteúdo que está pronto e ajudar pessoas com as suas dúvidas.\nComecei a pensar sobre como viabilizar nisso, nessa mesma época eu estava brincando de aprender a desenhar e aprender a fazer lettering no iPad. Nessa mesma época Chris Albon e Julia Evans — siga ambos, ótimas referências para acompanhar — passaram pela minha timeline no twitter postando um Machine Learning Flashcard e um Zine respectivamente, e aí algo clicou na minha cabeça, talvez eu possa fazer algo parecido só que para Git. E aí o trabalho começou.\nComo cada ficha é feita? #  Cada ficha é desenhada manualmente. Sim você leu certo, desenhada. Deixe-me explicar melhor.\nPara cada ficha eu sigo o mesmo conjunto de passos:\n Escolha do comando: eu escolho o comando que vai ser abordado com base em perguntas que faço no twitter, ou o comando que eu usei na semana e achei legal, ou até mesmo pedidos de ajuda que recebo por aí; Planejamento do conteúdo: eu escrevo o rascunho do conteúdo de cada ficha no meu bloco de notas, os rascunhos contém o comando, o título da ficha, e a lista de descrições de cada parte que compõe esse comando, depois eu traduzo tudo para inglês; Criação da ficha: só quando eu tenho todas as informações que eu quero colocar na ficha eu faço o desenho, para isso eu uso o Procreate, desenho o comando, escrevo as descrições, os títulos e exporto a imagem em ambos idiomas.  Com isso temos uma ficha, para finalizar eu gero o post da ficha, e publico elas usando os procedimentos descritos nas páginas desse diário.\n"},{"id":1,"href":"/dev-diaries/pt/docs/gitfichas/escolha-de-um-tema/","title":"Escolha de um tema","section":"GitFichas","content":"Escolha de um tema #  Essa foi definitivamente a parte fácil do projeto.\nEu não queria ter que desenvolver uma página. Existem vários motivos por trás disso e esses são os dois principais:\n Eu queria colocar o conteúdo no ar o mais rápido possível; Eu queria uma página com uma stack similar à que já uso em sites que mantenho.  Vamos discutir cada ponto.\nColocando conteúdo no ar, rápido #  Eu acredito que muitos blogs de pessoas desenvolvedoras morrem antes de nascer.\nGeralmente, a gente quer criar o próprio blog, com todas as features, alta performance e geralmente usando o último framework do momento.\nAo invés de focar no objetivo do blog que é, acima de tudo, escrever algo e publicar.\nEu prefiro ver os meus conteúdos da forma que eles ajudem alguém e única maneira de ajudar alguém, é colocando o que você escreve pra fora da sua máquina. Por isso, eu gosto de colocar coisas no ar rápido e ir melhorando elas aos poucos.\nColocar o conteúdo pra fora rápido, tem seus benefícios:\n Feedback cedo: As pessoas tendem a ser bem vocais sobre coisas que elas acham que não funciona ou coisas que elas acham que podem melhorar. Validação de hipótese: Eu sempre achei pessoas iam se beneficiar de ter um conteúdo amigável, tratado com linguagem simples e bem estruturado sobre git, o bom recebimento desse projeto, comprovou que realmente faltava isso.  E vale mencionar que esses dois benefícios nem entram no mérito de criação de portfólio e aprendizado de novas habilidades, que também são muito bem-vindos.\nA stack do GitFichas #  Eu também gosto de confiar em estruturas que me deem pouco trabalho para manutenção, por isso eu tendo a usar coisas como GitHub Pages e Jekyll, que me permitem colocar uma página no ar em questão de minutos. Ainda mais, essa foi a primeira vez que eu usei Netlify num dos sites que mantenho.\nEu já escrevi um tutorial completão sobre como colocar uma página no ar usando tanto GitHub Pages quanto Jekyll caso você tenha curiosidade.\nE são essas duas ferramentas que eu uso pra colocar a maioria dos meus sites no ar por que conheço bem essas duas ferramentas, existe uma comunidade bem estabelecida que usam elas e que eu posso me apoiar, e por último, mas não menos importante, tem muita coisa pronta que da para aproveitar.\nSe você acessar o meu blog, o próprio GitFichas ou até mesmo o site do Pizza de Dados, você pode se surpreender em saber que todos eles estão no ar hoje com Jekyll e GitHub Pages, e todos eles usam temas que foram alterados para suprirem as necessidades de cada um.\nNo caso do GitFichas eu precisava de um tema que fosse focado em imagens, e então depois de passear pela coleção de temas do Jekyll eu achei esse tema de portfólio que parecia ser o ideal para mim. Caso você queria entender como achar um tema em Jekyll para as suas páginas eu também escrevi sobre isso aqui.\nEsse tema tinha suas particularidades, mas com a escolha feita, o próximo passo era colocar ele no ar, siga para a próxima página.\n"},{"id":2,"href":"/dev-diaries/pt/docs/gitfichas/colocando-no-ar/","title":"Colocando no ar","section":"GitFichas","content":"Colocando no ar #  Para colocar o GitFichas no ar, eu segui os passos que eu sempre sigo. Se você quiser entender mais detalhes desse passo a passo, tem um tutorial pra você aqui. Aqui vou falar sobre outros detalhes que não cubro no tutorial.\nPara começar o código do GitFichas é privado. Isso quer dizer que a única pessoa que tem acesso a ele sou eu.\nO projeto é privado #  Hoje, não tem nenhum motivo particular para isso, mas ao colocar o projeto no ar, minha ideia inicial era liberar uma ou duas fichas por semana. Para fazer isso, já que eu não tenho um CMS ligado no GitFichas, eu deixava os pull requests pré-prontos apenas para fazer o merge na data indicada. Assim, manter o código privado ia impedir de pessoas espiarem as fichas que iam sair.\nTô usando Netlify #  Além disso, eu aproveitei o GitFichas para finalmente aprender a usar o Netlify. Esse serviço integra com o GitHub de uma forma tão linda que a configuração dele foi suuuuper intuitiva:\n fiz a minha conta por lá; associei a minha conta do GitHub com a conta do Netlify; dei acesso ao Netlify para encontrar apenas o repositório do GitFichas (isso aqui me impressionou, já falo mais sobre); esperei o primeiro build rolar (o primeiro sempre demora um tiquinho mais), e pronto.  Eu achei que ia ser mais complicado confesso, e talvez seja, se a configuração do seu site for mais complexa ou se você usar o Netlify para outras coisas como servir o site e afins. Como o meu site é servido pelo GitHub eu não precisei me preocupar com mais nada.\nDepois disso, para cada novo pull request aberto, o bot do Netlify aparece para mostrar essa mensagem:\nEssa mensagem é atualizada para cada commit que for feito o push para o GitHub. Para mim, que muitas vezes ajusto coisas do GitFichas pelo iPad, essa capacidade de pré-visualizar o site sem precisar rodar ele localmente é de grande ajuda.\nAcesso à um repositório específico #  Voltando ao assunto que me impressionou: acesso para encontrar apenas um repositório.\nNo trabalho eu uso o mesmo perfil do GitHub que uso para os meus projetos pessoais. Por causa disso, eu fico 3x mais atenta a quais serviços tem acesso aos dados do meu perfil.\nO fato de poder controlar tão detalhadamente quais repositórios o serviço tem acesso me impressionou pois normalmente não é isso que acontece.\nPor exemplo, o Heroku consegue listar todos os repositórios da minha conta, para ser justa, ele não tem acesso as organizações a não ser que eu peça isso, mas ainda assim, o Netlify dá um passo além.\nDomínio #  Pra finalizar eu comprei um domínio novo no Namecheap e configurei ele no GitHub.\nÉ pelo namecheap que eu compro e gerencio todos meus domínios, eu acho ele fácil de usar e configurar. Por exemplo, o GitFichas tem dois domínios principais:\n https://gitfichas.com que mostra a página em português; https://gitstudycards.com que redireciona para a página em inglês do projeto.  Esse redirecionamento eu faço direto pelo site do Namecheap sem precisar de mais nada. É muito prático.\nAnúncio oficial #  Com o domínio no ar e as primeiras fichas publicadas eu fiz o que eu mais gosto de fazer e escrevi um artigo no meu blog para contar que o projeto nasceu. Basicamente pra contar a proposta do projeto, mostrar a carinha de uma ficha e deixar quem acompanha o meu trabalho a par da novidade.\n"}]